<Window x:Class="passgen.windows.SVToDesktop"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:passgen.windows"
        mc:Ignorable="d"
        Title="SVToDesktop" Width="450" Height="300" Background="Black" WindowStyle="None" ResizeMode="NoResize" BorderBrush="#16c60c" BorderThickness="1.5"  WindowStartupLocation="CenterScreen" MouseMove="Window_MouseMove" MouseEnter="Window_MouseEnter" MouseLeave="Window_MouseLeave">

    <Window.Resources>
        <!-- Define a style for the CheckBox -->
        <Style x:Key="CustomCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <!-- Define the checkmark with the desired color -->
                                <Grid Width="14" Height="13" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <Rectangle x:Name="Border" Fill="Black" Stroke="#16c60c"/>
                                    <Path HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="CheckMark" Stroke="#16c60c" StrokeThickness="1.5"
                                      Data="M 1 5 L 4 8 L 9 1" SnapsToDevicePixels="True"/>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="2,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"></Setter>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Hidden"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Define a style for the CheckBox -->
        <!-- Define a style for the Button -->
        <Style x:Key="CustomButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Red"/>
            <Setter Property="BorderBrush" Value="#16c60c"/>
            <Setter Property="BorderThickness" Value="1"    />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5"
                        Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="red"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Define a style for the Button -->

        <!-- Define a style for the Textbox -->
        <Style x:Key="CustomTextboxStyle" TargetType="TextBox">
            <Setter Property="BorderBrush" Value="#16c60c"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#16c60c"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border x:Name="border" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="5">
                                <ScrollViewer x:Name="PART_ContentHost"/>
                            </Border>
                            <TextBlock x:Name="placeholderText" Text="{TemplateBinding Tag}" Foreground="#16c60c" VerticalAlignment="Center" Margin="5,0,0,0" Visibility="Collapsed"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Red"/>
                            </Trigger>
                            <Trigger Property="Text" Value="">
                                <Setter TargetName="placeholderText" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Define a style for the Textbox -->

        <!-- Define a style for the Slider -->
        <Style x:Key="SliderAccentButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent">
                            <Border Height="2" CornerRadius="0, 0, 0, 0" Background="{TemplateBinding Foreground}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent">
                            <Border Height="4" CornerRadius="0, 2.5, 2.5, 0" Background="{TemplateBinding Foreground}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Width" Value="20" />
            <Setter Property="BorderThickness" Value="1.5" />
            <Setter Property="BorderBrush" Value="#16c60c"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid>
                            <Border Name="AccentThumb"
                            Background="White"
                            BorderBrush="#16c60c"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Width="20"
                            Height="20"
                            CornerRadius="40" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="AccentThumb" Property="BorderBrush" Value="red"/>
                            </Trigger>
                            <Trigger Property="IsMouseCaptured" Value="True">
                                <Setter TargetName="AccentThumb" Property="BorderBrush" Value="#16c60c"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BaseVolumeSliderStyle" TargetType="{x:Type Slider}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Minimum" Value="8" />
            <Setter Property="Maximum" Value="16" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Interval" Value="1" />
            <Setter Property="Height" Value="32" />
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="SmallChange" Value="1" />
            <Setter Property="LargeChange" Value="1" />
            <Setter Property="IsManipulationEnabled" Value="true" />
        </Style>

        <Style x:Key="{x:Type Slider}"
       BasedOn="{StaticResource BaseVolumeSliderStyle}"
       TargetType="{x:Type Slider}">
            <Setter Property="Template" Value="{DynamicResource VolumeSliderTemplate}" />
        </Style>

        <ControlTemplate x:Key="VolumeSliderTemplate" TargetType="{x:Type Slider}">
            <Grid>
                <Border Name="TrackBackground" Height="2" />

                <Track Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Name="SliderLeft"
                              Command="Slider.DecreaseLarge"
                              Foreground="#16c60c"
                              Style="{StaticResource SliderAccentButtonStyle}" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Name="SliderThumb">
                            <Thumb.Style>
                                <Style BasedOn="{StaticResource SliderThumbStyle}" TargetType="{x:Type Thumb}">
                                    <Setter Property="Foreground" Value="White" />
                                    <Setter Property="BorderBrush" Value="#16c60c" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="true">
                                            <Setter Property="BorderThickness" Value="1" />
                                            <Setter Property="BorderBrush" Value="#16c60c" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsMouseCaptureWithin, RelativeSource={RelativeSource TemplatedParent}}" Value="true">
                                            <Setter Property="BorderThickness" Value="10" />
                                            <Setter Property="BorderBrush" Value="#16c60c" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Name="SliderRight"
                              Command="Slider.IncreaseLarge"
                              Foreground="White"
                              Style="{StaticResource SliderButtonStyle}" />
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!-- Define a style for the Slider -->

    </Window.Resources>
    <Grid Width="450" Height="300" HorizontalAlignment="Center" VerticalAlignment="Center">
        <Canvas x:Name="SiluetCanvas" HorizontalAlignment="Center" Visibility="Hidden" VerticalAlignment="Center" Panel.ZIndex="-1" Opacity="0.8">
            <Canvas.Background>
                <ImageBrush/>
            </Canvas.Background>
            <Canvas.Effect>
                <BlurEffect Radius="100" KernelType="Gaussian"/>
            </Canvas.Effect>
            <Ellipse Fill="White" Width="60" Height="60" />
        </Canvas>
        <WrapPanel HorizontalAlignment="Right" VerticalAlignment="Top" Width="30" Height="30" Margin="0,2.75,2.75,0">
            <Button x:Name="btnClose" BorderBrush="#16c60c" Style="{StaticResource CustomButtonStyle}" Width="30" Height="30" Click="btnClose_Click">
                <Button.Background>
                    <ImageBrush ImageSource="Images/close.png" Stretch="UniformToFill" TileMode="Tile"/>
                </Button.Background>
                <Button.Effect>
                    <BlurEffect Radius="2" KernelType="Gaussian" RenderingBias="Quality"/>
                </Button.Effect>
            </Button>
        </WrapPanel>

        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
            <Grid>
                <TextBlock x:Name="dynamicTextBlock" Text="gimme a account name" Foreground="#16c60c" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5"/>
            </Grid>

            <Label x:Name="lblAccountName" Content="account name" Foreground="#16c60c" Padding="0,0,0,0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" Height="14"/>
            <TextBox x:Name="txtAccountName" Foreground="#16c60c" Style="{StaticResource CustomTextboxStyle}" FontSize="15" Width="120" Height="25" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </StackPanel>
    </Grid>
</Window>
