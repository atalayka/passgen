<Window x:Class="passgen.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:passgen"
        mc:Ignorable="d"
        Title="MainWindow" Height="400" Width="550" Background="Black" WindowStyle="None" WindowStartupLocation="CenterScreen" >

    <Window.Resources>
        <!-- Define a style for the CheckBox -->
        <Style x:Key="CustomCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <!-- Define the checkmark with the desired color -->
                                <Grid Width="12" Height="12" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <Rectangle x:Name="Border" Fill="Black" Stroke="#16c60c"/>
                                    <Path HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="CheckMark" Stroke="#16c60c" StrokeThickness="1.5"
                                          Data="M 1 5 L 4 8 L 9 1" SnapsToDevicePixels="True"/>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="2,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"></Setter>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Hidden"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Define a style for the CheckBox -->
        <!-- Define a style for the Button -->
        <Style x:Key="CustomButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Red"/>
            <Setter Property="BorderBrush" Value="#16c60c"/>
            <Setter Property="BorderThickness" Value="1"    />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="red"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Define a style for the Button -->

        <!-- Define a style for the Textbox -->
        <Style x:Key="CustomTextboxStyle" TargetType="TextBox">
            <Setter Property="BorderBrush" Value="#16c60c"/>
            <Setter Property="Cursor" Value="None"/>
        </Style>
        <!-- Define a style for the Textbox -->

        <!-- Define a style for the Slider -->
        <Style x:Key="SliderAccentButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent">
                            <Border Height="2" CornerRadius="0, 0, 0, 0" Background="{TemplateBinding Foreground}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent">
                            <Border Height="4" CornerRadius="0, 2.5, 2.5, 0" Background="{TemplateBinding Foreground}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Width" Value="20" />
            <Setter Property="BorderThickness" Value="1.5" />
            <Setter Property="BorderBrush" Value="#16c60c"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid>
                            <Border Name="AccentThumb"
                                Background="White"
                                BorderBrush="#16c60c"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Width="20"
                                Height="20"
                                CornerRadius="40" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="AccentThumb" Property="BorderBrush" Value="red"/>
                            </Trigger>
                            <Trigger Property="IsMouseCaptured" Value="True">
                                <Setter TargetName="AccentThumb" Property="BorderBrush" Value="#16c60c"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BaseVolumeSliderStyle" TargetType="{x:Type Slider}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Minimum" Value="8" />
            <Setter Property="Maximum" Value="16" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Interval" Value="1" />
            <Setter Property="Height" Value="32" />
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="SmallChange" Value="1" />
            <Setter Property="LargeChange" Value="1" />
            <Setter Property="IsManipulationEnabled" Value="true" />
        </Style>

        <Style x:Key="{x:Type Slider}"
           BasedOn="{StaticResource BaseVolumeSliderStyle}"
           TargetType="{x:Type Slider}">
            <Setter Property="Template" Value="{DynamicResource VolumeSliderTemplate}" />
        </Style>

        <ControlTemplate x:Key="VolumeSliderTemplate" TargetType="{x:Type Slider}">
            <Grid>
                <Border Name="TrackBackground" Height="2" />

                <Track Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Name="SliderLeft"
                                  Command="Slider.DecreaseLarge"
                                  Foreground="#16c60c"
                                  Style="{StaticResource SliderAccentButtonStyle}" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Name="SliderThumb">
                            <Thumb.Style>
                                <Style BasedOn="{StaticResource SliderThumbStyle}" TargetType="{x:Type Thumb}">
                                    <Setter Property="Foreground" Value="White" />
                                    <Setter Property="BorderBrush" Value="#16c60c" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="true">
                                            <Setter Property="BorderThickness" Value="1" />
                                            <Setter Property="BorderBrush" Value="#16c60c" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsMouseCaptureWithin, RelativeSource={RelativeSource TemplatedParent}}" Value="true">
                                            <Setter Property="BorderThickness" Value="10" />
                                            <Setter Property="BorderBrush" Value="#16c60c" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Name="SliderRight"
                                  Command="Slider.IncreaseLarge"
                                  Foreground="White"
                                  Style="{StaticResource SliderButtonStyle}" />
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!-- Define a style for the Slider -->
    </Window.Resources>

    <Grid Width="550" Height="400">

        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">

            <WrapPanel VerticalAlignment="Center" HorizontalAlignment="Center" Height="35" Margin="0,0,0,5">
                <TextBox x:Name="txtResult" Foreground="#16c60c" HorizontalAlignment="Center" Style="{StaticResource CustomTextboxStyle}" IsReadOnly="True" BorderBrush="#16c60c" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" FontWeight="Medium" TextWrapping="Wrap" Text="" VerticalAlignment="Center" Width="175" FontSize="16" FontFamily="Bahnschrift" Height="34" Background="{x:Null}"/>
                <Button x:Name="Rectangle"  HorizontalAlignment="Left" BorderBrush="Transparent" BorderThickness="0" Margin="5,2.5,0,0" VerticalAlignment="Top" Width="30" Height="30">
                    <Button.Background>
                        <ImageBrush ImageSource="/clipboard.png"/>
                    </Button.Background>
                </Button>
                <Button x:Name="copyToClipB" Style="{StaticResource CustomButtonStyle}" Width="32" Height="32" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="-31,0,0,0" Click="copyToClipB_Click"></Button>
            </WrapPanel>

            <WrapPanel Width="283" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,5">
                <CheckBox x:Name="checkLowerCase" Content="lowercase" Foreground="#16c60c"  Style="{StaticResource CustomCheckBoxStyle}" Width="67" Height="15" IsChecked="True" Margin="0,0,10,0" />
                <CheckBox x:Name="checkUpperCase" Content="uppercase" Foreground="#16c60c"  Style="{StaticResource CustomCheckBoxStyle}" Width="68" Height="15" Margin="0,0,10,0" />
                <CheckBox x:Name="checkNumbers" Content="numbers" Foreground="#16c60c"  Style="{StaticResource CustomCheckBoxStyle}" Width="61" Height="15" IsChecked="False" Margin="0,0,10,0" />
                <CheckBox x:Name="checkSymbols" Content="symbols" Foreground="#16c60c"  Style="{StaticResource CustomCheckBoxStyle}" Width="57" Height="15" />
            </WrapPanel>

            <WrapPanel Height="20" Width="145" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,5">
                <Slider x:Name="CharCount" IsSnapToTickEnabled="True"  TickFrequency="1" HorizontalAlignment="Left" Maximum="16" Minimum="8" VerticalAlignment="Top" Width="120" Height="20">
                    <Slider.Resources>
                        <Style TargetType="Thumb" BasedOn="{StaticResource SliderThumbStyle}" />
                        <Style TargetType="RepeatButton" BasedOn="{StaticResource SliderButtonStyle}" />
                    </Slider.Resources>
                </Slider>
                <TextBox Background="Black" BorderBrush="#16c60c" IsReadOnly="True"  Style="{StaticResource CustomTextboxStyle}" VerticalContentAlignment="Top" HorizontalContentAlignment="Right" Foreground="#16c60c" Text="{Binding ElementName=CharCount, Path=Value, UpdateSourceTrigger=PropertyChanged}" TextAlignment="Center" Width="20" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0,0,0" />
            </WrapPanel>

            <WrapPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <Button x:Name="btnGenerate" Style="{StaticResource CustomButtonStyle}" Background="Transparent" BorderBrush="#16c60c" Foreground="#16c60c" Content="generate" HorizontalAlignment="Center" VerticalAlignment="Center" Click="btnGenerate_Click" Width="59" Height="22" FontFamily="Arial" FontWeight="Bold" FontSize="11"/>
            </WrapPanel>
        </StackPanel>
    </Grid>
</Window>
